name: Java CI with Gradle

# Trigger the workflow on push and pull request events targeting the "main" branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Define the jobs in this workflow
jobs:
  # First job: Build the Java project
  build:
    # Specify the runner environment
    runs-on: ubuntu-latest
    permissions:
      # Allow write access to repository content
      contents: write

    steps:

    # Permission preparation
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    # Step 1: Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Java Development Kit (JDK) version 21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'   # Specify the Java version
        distribution: 'zulu' # Use Azul Zulu OpenJDK

    # Step 3: Cache Gradle dependencies to speed up builds by reusing previously downloaded dependencies
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches # Path to the Gradle cache directory
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }} # Unique cache key based on OS and Gradle files
        restore-keys: |
          ${{ runner.os }}-gradle- # Fallback keys for partial cache matches

    # Step 4: Build the project using the Gradle Wrapper
    - name: Build with Gradle Wrapper
      run: ./gradlew build # Execute the Gradle build command

  # Second job: Submit the dependency graph for security analysis and Dependabot alerts
  dependency-submission:
    # Specify the runner environment
    runs-on: ubuntu-latest
    permissions:
      # Allow write access to repository content
      contents: write

    steps:
    # Step 1: Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Java Development Kit (JDK) version 21
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'   # Specify the Java version
        distribution: 'zulu' # Use Azul Zulu OpenJDK

    # Step 3: Generate and submit the dependency graph
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v4 # Use the Gradle dependency submission action
