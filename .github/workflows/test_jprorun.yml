name: Java CI with JPro (Manual Trigger & Public Access)

on:
  workflow_dispatch:  # Nur manuelles Starten

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      # 1. Repository auschecken
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 21 einrichten
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'

      # 3. gradlew ausführbar machen
      - name: Make gradlew executable
        run: chmod +x ./gradlew

      # 4. Gradle-Abhängigkeiten cachen
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 5. Öffentliche IP-Adresse des Runners ausgeben (zur Info)
      - name: Get public IP address
        run: curl ifconfig.me

      # 6. Hilfsprogramm "jq" zur JSON-Auswertung installieren
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # 7. ngrok herunterladen und vorbereiten
      - name: Install ngrok
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          chmod +x ./ngrok

      # 8. JPro-Server starten (im Hintergrund)
      - name: Start JPro Server
        env:
          # Stelle sicher, dass dein JPro-Server auf allen Schnittstellen lauscht
          JPRO_SERVER_ADDRESS: "0.0.0.0"
          JPRO_SERVER_PORT: "8080"
        run: |
          nohup ./gradlew jprorun > jpro.log 2>&1 &
          echo "Warte auf den Start des JPro-Servers..."
          sleep 10  # ggf. anpassen, wenn der Server länger benötigt

      # 9. ngrok-Tunnel starten (im Hintergrund) und ausreichend warten
      - name: Start ngrok tunnel
        run: |
          nohup ./ngrok http 8080 > ngrok.log 2>&1 &
          echo "Warte auf die Initialisierung von ngrok..."
          sleep 30  # Erhöhte Wartezeit für ngrok

      # 10. Debug: Ausgabe des ngrok-API-JSON-Outputs (zur Überprüfung)
      - name: Debug ngrok tunnels output
        run: |
          echo "ngrok tunnels JSON output:"
          curl --silent http://127.0.0.1:4040/api/tunnels

      # 11. Öffentliche ngrok-URL auslesen und anzeigen
      - name: Show ngrok public URL
        run: |
          NGROK_URL=$(curl --silent http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          echo "Dein JPro-Server ist nun öffentlich erreichbar unter: $NGROK_URL"
          if [ -z "$NGROK_URL" ]; then
            echo "Error: Keine öffentliche URL gefunden. Überprüfe den Tunnel-Status in den Logs."
            exit 1
          fi
          echo "Server läuft – 5 Minuten Zeit zum Testen."
          sleep 300
